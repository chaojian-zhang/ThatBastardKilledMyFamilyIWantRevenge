-- relative reference
local game_manager = "/gamemanager"
-- local skip_logo = true

--- Local Animation Step Functions: Order matters, declare first before using
local function animation_stage_2_finished(self, node)
	-- Enable start_button at the end of animation
	local startButton = gui.get_node("start_button")
	gui.set_enabled(startButton, true)

	-- Do some crazy animation on it
	local values = { 0, 0, 0, 0, 0, 0, 0, 0,
	1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 0, 0, 0, 0, 0, 0,
	1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 0, 0, 0, 0, 0, 0,
	1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 0, 0, 0, 0, 0, 0,
	1, 1, 1, 1, 1, 1, 1, 1 }
	local vec = vmath.vector(values)
	-- gui.animate(gui.get_node("start_text"), "color.w", 0, gui.EASING_INBACK, 4.0, 0, nil, gui.PLAYBACK_LOOP_PINGPONG)
	gui.animate(gui.get_node("start_text"), "color.w", 0, vec, 4.0, 0, nil, gui.PLAYBACK_LOOP_PINGPONG)

	-- Now, acquire input. Due to timing, we're gonna be on top of the input stack.
	msg.post(".", "acquire_input_focus")
end

local function animation_stage_1_finished(self, node)
	-- Stage 2: Wait for 2 seconds then ease out
	gui.animate(node, "color.w", 0, gui.EASING_OUTSINE, 2, 2, animation_stage_2_finished, gui.PLAYBACK_ONCE_FORWARD)
	-- Stage 2: Also hide logo_background at the end of animation
	local logoBackground = gui.get_node("logo_background")
	gui.animate(logoBackground, "color.w", 0, gui.EASING_OUTSINE, 0.1, 4, nil, gui.PLAYBACK_ONCE_FORWARD)
end

local function animation_screen_out_finished(self, node)
	-- Since we cannot delete ourselves in the gui_script, let's just disable ourself for now
	msg.post(".", "disable") -- gui.delete_node() cannot remove self, go.delete() only works on game obejct script
	-- Remove inputs from this gui component
	msg.post(".", "release_input_focus")
end

--- Core Runtime Events
function init(self)
	-- Fetch start button and disable it
	local node = gui.get_node("start_button")
	gui.set_enabled(node, false)
	
	-- state variables
	self.logo_duration = 5

	-- Stage 1 Animation: Pop-in Logo Image
	local logoImage = gui.get_node("logo_image")
	gui.animate(logoImage, "color.w", 1, gui.EASING_INEXPO, 1, 0, animation_stage_1_finished, gui.PLAYBACK_ONCE_FORWARD)
	-- Stage 1 : Play "de-lala" electrical sound effect
	-- ...
end

function on_input(self, action_id, action)
	local startButton = gui.get_node("start_button")
	if action_id == hash("touch") or action_id == hash("click") and action.pressed and gui.pick_node(startButton, action.x, action.y) then
		-- ask GM to spawn level
		msg.post(game_manager, "load_level", { level = 0 }) -- [6]

		-- hide nodes
		gui.set_enabled(startButton, false) -- msg.post(startButton, "disable")
		gui.set_enabled(gui.get_node("gametitle_image"), false)

		-- play screen out animation
		local left_screen = gui.get_node("left_screen")
		local right_screen = gui.get_node("right_screen")
		gui.animate(left_screen, "position.x", -400, gui.EASING_LINEAR, 1.5, 0, animation_screen_out_finished)
		gui.animate(right_screen, "position.x", 400+720, gui.EASING_LINEAR, 1.5)
	end

	-- disable all further input processing until game is started
	return true
end